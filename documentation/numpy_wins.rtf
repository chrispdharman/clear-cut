{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red23\green23\blue23;\red202\green202\blue202;
\red183\green111\blue179;\red70\green137\blue204;\red212\green214\blue154;\red167\green197\blue152;\red18\green19\blue24;
\red238\green249\blue255;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c66667;\cssrgb\c70980\c80784\c65882;\cssrgb\c8627\c9804\c12157;
\cssrgb\c94510\c98039\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Numpy find coordinates with non-zero values:\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b0 \cf2 \cb3 \expnd0\expndtw0\kerning0
return np.argwhere(edge_image > 0.)
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 0.0005538463592529297 seconds\
0.0005776882171630859 seconds\
0.0005791187286376953 seconds\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 Chris find coordinates with non-zero values:\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b0 \cf4 \cb3 \expnd0\expndtw0\kerning0
edge_coordinates = []\cb1 \
\cb3         shape = edge_image.shape\cb1 \
\cb3         \cf5 for\cf4  i \cf6 in\cf4  \cf7 range\cf4 (\cf8 0\cf4 , shape[\cf8 0\cf4 ]):\cb1 \
\cb3             \cf5 for\cf4  j \cf6 in\cf4  \cf7 range\cf4 (\cf8 0\cf4 , shape[\cf8 1\cf4 ]):\cb1 \
\cb3                 \cf5 if\cf4  edge_image[i,j] > \cf8 0\cf4 .:\cb1 \
\cb3                     edge_coordinates.append([i,j])\cb1 \
\cb3         \cb1 \
\cb3         \cf5 return\cf4  np.array(edge_coordinates)\cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
0.06385302543640137 seconds\
0.05585598945617676 seconds\
0.05484580993652344 seconds\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 For loop over coordinates to determine gradient image:\

\b0 Time taken=10.19891881942749\
\

\b Itertools.product generator over coordinates to determine gradient image:\
\
\pard\pardeftab720\sl480\partightenfactor0

\f2\b0\fs43\fsmilli21600 \cf9 \cb10 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 clearCutApexProject_image-start\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
}